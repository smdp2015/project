/*
 * generated by Xtext
 */
package dk.itu.smdp2015.church.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import dk.itu.smdp2015.church.model.configurator.Configurator
import dk.itu.smdp2015.church.model.configurator.ParameterGroup
import dk.itu.smdp2015.church.model.configurator.Parameter
import org.eclipse.emf.common.util.EList
import dk.itu.smdp2015.church.model.configurator.AbstractParameter
import dk.itu.smdp2015.church.model.configurator.Unary
import dk.itu.smdp2015.church.model.configurator.Identifier
import dk.itu.smdp2015.church.model.configurator.InRange
import dk.itu.smdp2015.church.model.configurator.Enumerated
import dk.itu.smdp2015.church.model.configurator.Bounded
import dk.itu.smdp2015.church.model.configurator.Binary
import dk.itu.smdp2015.church.model.configurator.BinaryOperator
import dk.itu.smdp2015.church.model.configurator.Constraint
import java.util.List
import java.util.ArrayList
import dk.itu.smdp2015.church.generator.jqm.JqmGenerator

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class ConfiguratorGenerator implements IGenerator {
			
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
//		for(e:resource.allContents.toIterable.filter(typeof(Configurator)))
//		{
//			fsa.generateFile("configurator.cs", e.compile)
//		}

		var generators = #{new CSGenerator(),new JqmGenerator()};
		generators.forEach[
			try{
				it.doGenerate(resource, fsa);
			}catch(Exception ex){
				System.out.println(String.format("Error generating code with %S: \n %S \n %S", it.class.name,ex.message,ex.stackTrace))
			}
		]		
	}
	
}
	
